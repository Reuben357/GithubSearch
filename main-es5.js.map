{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.config.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/repositories/repositories.component.ts","webpack:///src/app/components/repositories/repositories.component.html","webpack:///src/app/components/users/users.component.ts","webpack:///src/app/components/users/users.component.html","webpack:///src/app/helpers/auth.headers.ts","webpack:///src/app/services/notification.service.ts","webpack:///src/app/services/repositories.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","loadingBar","router","title","events","subscribe","event","navigationInterceptor","start","complete","stop","selector","templateUrl","styleUrls","configs","apiBaseURL","AppModule","declarations","providers","bootstrap","RepositoriesComponent","repositoriesService","githubUserInfo","JSON","parse","getGithubUserInfo","getUserRepositories","repos_url","data","userRepositories","repositoryCount","length","getUserFollowers","followers_url","userFollowers","followerCount","UsersComponent","formBuilder","notification","slimLoadingBarService","userService","createForm","githubUsernameForm","group","githubUsername","required","username","getGithubUser","items","startLoading","localStorage","setItem","stringify","navigateByUrl","showError","stopLoading","authHeader","oauth_token","NotificationService","toastr","message","success","error","info","warning","providedIn","RepositoriesService","http","httpOptions","headers","getItem","get","UserService","searchUsersEndpoint","params","q","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UsersComponent } from './components/users/users.component';\nimport { RepositoriesComponent } from './components/repositories/repositories.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsersComponent\n  },\n  {\n    path: 'repositories',\n    component: RepositoriesComponent\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { SlimLoadingBarService } from \"ng2-slim-loading-bar\";\nimport {\n  NavigationCancel,\n  NavigationEnd,\n  NavigationError,\n  NavigationStart,\n  Router\n} from \"@angular/router\";\nimport { NotificationService } from \"./services/notification.service\";\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'GithubSearch';\n\n  constructor(private loadingBar: SlimLoadingBarService,\n    private router: Router) {\n\n    // @ts-ignore\n    this.router.events.subscribe((event: Event) => {\n      this.navigationInterceptor(event);\n    });\n  }\n\n  private navigationInterceptor(event: Event): void {\n    if (event instanceof NavigationStart) {\n      this.loadingBar.start();\n    }\n\n    if (event instanceof NavigationEnd) {\n      this.loadingBar.complete();\n    }\n\n    if (event instanceof NavigationCancel) {\n      this.loadingBar.stop();\n    }\n\n    if (event instanceof NavigationError) {\n      this.loadingBar.stop();\n    }\n  }\n}\n","<ng2-slim-loading-bar [color]=\"'#001e1d'\" [height]=\"'10px'\" ></ng2-slim-loading-bar>\n\n<nav class=\"navbar navbar-expand-sm bg-light\">\n  <div class=\"container-fluid\">\n    <ul class=\"navbar-nav\">\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\"\n           routerLink=\"/\"\n           routerLinkActive=\"active\">\n          Home\n        </a>\n      </li>\n    </ul>\n  </div>\n</nav>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","export const configs = {\n    apiBaseURL: 'https://api.github.com'\n  }\n  ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RepositoriesComponent } from './components/repositories/repositories.component';\nimport { UsersComponent } from './components/users/users.component';\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {SlimLoadingBarModule} from \"ng2-slim-loading-bar\";\nimport {ToastrModule} from \"ngx-toastr\";\nimport { UserService } from './services/user.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RepositoriesComponent,\n    UsersComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    SlimLoadingBarModule.forRoot(),\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    AppRoutingModule\n  ],\n  providers: [UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport UserModel from \"../../models/user.model\";\nimport {RepositoriesService} from \"../../services/repositories.service\";\nimport RepositoryModel from \"../../models/repository.model\";\n\n\n@Component({\n  selector: 'app-repositories',\n  templateUrl: './repositories.component.html',\n  styleUrls: ['./repositories.component.css']\n})\nexport class RepositoriesComponent implements OnInit {\n\n\n  githubUserInfo: UserModel;\n  userRepositories: RepositoryModel[];\n  userFollowers: UserModel[];\n  followerCount: number;\n  repositoryCount: number;\n\n  constructor(private repositoriesService: RepositoriesService) { }\n\n  ngOnInit(): void {\n    this.githubUserInfo = JSON.parse(this.repositoriesService.getGithubUserInfo());\n\n    this.repositoriesService.getUserRepositories(this.githubUserInfo.repos_url).subscribe((data: RepositoryModel[])  => {\n      this.userRepositories = data;\n      this.repositoryCount = this.userRepositories.length || 0;\n    });\n\n    this.repositoriesService.getUserFollowers(this.githubUserInfo.followers_url).subscribe((data: UserModel[] )=> {\n      this.userFollowers = data;\n      this.followerCount =this.userFollowers.length || 0;\n    })\n  }\n  \n\n}\n","<div class=\"row\" style=\"padding-top: 68px;  padding-bottom: 50px;\" ng>\n  <div class=\"col-12\">\n    <div class=\"card card-bg\">\n      <div class=\"card-body\">\n        <div class=\"card-title mb-4\">\n          <div class=\"d-flex justify-content-start\">\n            <div class=\"image-container\">\n              <img alt=\"GitHub User's Avatar\" class=\"img-thumbnail\" id=\"img-avatar\" src=\"{{githubUserInfo.avatar_url}}\">\n            </div>\n\n\n            <div class=\"userData ml-3\">\n              <h2 class=\"d-block\" id=\"user-name\">\n                {{githubUserInfo.login}}\n              </h2>\n\n\n              <h6 class=\"d-block\">{{repositoryCount}} repositories</h6>\n\n\n              <h6 class=\"d-block\">{{followerCount}} followers</h6>\n            </div>\n\n          </div>\n        </div>\n\n\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <ul class=\"nav nav-tabs\" id=\"repositoriesTab\" role=\"tablist\">\n\n              <li class=\"nav-item mr-2\">\n                <button aria-controls=\"user-repositories\" aria-selected=\"true\" class=\"nav-link active btn-custom-yellow\"\n                  data-toggle=\"tab\" href=\"#user-repositories\" id=\"user-repositories-tab\"\n                  role=\"tab\">Repositories</button>\n              </li>\n\n\n              <li class=\"nav-item\">\n                <button aria-controls=\"user-followers\" aria-selected=\"false\" class=\"nav-link btn-custom-yellow\"\n                  data-toggle=\"tab\" href=\"#user-followers\" id=\"user-followers-tab\" role=\"tab\">Followers</button>\n              </li>\n\n            </ul>\n\n\n            <div class=\"tab-content ml-1\" id=\"repositories-tab-content\">\n\n              <div aria-labelledby=\"user-repositories-tab\" class=\"tab-pane fade show active\" id=\"user-repositories\"\n                role=\"tabpanel\">\n                <table class=\"table\" id=\"user-repositories-table\">\n                  <tbody>\n                    <tr *ngFor=\"let userRepository of userRepositories\">\n                      <td>\n                        <h4 class=\"font-weight-bold\">{{userRepository.full_name}}</h4>\n                        <div class=\"mt-2 mb-2\">\n                          {{userRepository.description}}\n                        </div>\n                        <a class=\"mb-2\" href=\"{{userRepository.html_url}}\" target=\"_blank\">Access repository</a>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n\n\n              <div aria-labelledby=\"user-followers\" class=\"tab-pane fade\" id=\"user-followers\" role=\"tabpanel\">\n                <table class=\"table\" id=\"use-followers-table\">\n                  <tbody>\n                    <tr *ngFor=\"let userFollower of userFollowers\">\n                      <td>\n                        <div class=\"row\">\n                          <div class=\"col-3\">\n                            <img alt=\"A user's follower avatar\" class=\"img-fluid img-thumbnail\"\n                              src=\"{{userFollower.avatar_url}}\">\n                          </div>\n                          <div class=\"col-4\">\n                            <h4 class=\"font-weight-bold\">{{userFollower.login}}</h4>\n                            <a class=\"mb-2\" href=\"{{userFollower.html_url}}\" target=\"_blank\">Access Follower</a>\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { UserService } from '../../services/user.service'\nimport {Router} from \"@angular/router\";\nimport {NotificationService} from \"../../services/notification.service\";\nimport {SlimLoadingBarService} from \"ng2-slim-loading-bar\";\n\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  githubUsernameForm: FormGroup;\n  private items;\n\n  constructor(private formBuilder: FormBuilder,\n    private notification: NotificationService,\n    private router: Router,\n    private slimLoadingBarService: SlimLoadingBarService,\n    private userService: UserService) {\nthis.createForm()\n}\n\nstartLoading() {\nthis.slimLoadingBarService.start();\n}\n\nstopLoading() {\nthis.slimLoadingBarService.stop();\n}\n\ncreateForm() {\nthis.githubUsernameForm = this.formBuilder.group({\ngithubUsername: ['', Validators.required]\n})\n}\n\ngetGithubUser(username: string) {\nthis.userService.getGithubUser(username).subscribe(data =>{\nthis.items = data['items']\n\n// process results from query\nthis.startLoading()\nif (this.items.length === 1){\n\n// save items to local storage\nlocalStorage.setItem('githubUserInfo', JSON.stringify(this.items[0]));\n\n// redirect to repositories\nthis.router.navigateByUrl('/repositories')\n\n} else {\n// toast error\nthis.notification.showError('Please provide YOUR specific username.', 'Invalid username')\n}\nthis.stopLoading()\n\n});\n\n}\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\" id=\"landingPageSection\">\n\n  <div class=\" col-lg-6 col-md-7 offset-md-3\">\n\n    <span class=\"anchor\"></span>\n\n    <div class=\"card card-outline-secondary card-bg\">\n\n      <div class=\"card-header\">\n        <h4 class=\"mb-0\">Your Github Repositories</h4>\n      </div>\n\n      <div class=\"card-body\">\n\n        <form [formGroup]=\"githubUsernameForm\" novalidate>\n\n          <div class=\"form-group\">\n            <label>Username</label>\n            <input class=\"form-control\" formControlName=\"githubUsername\" type=\"text\" #githubUsername>\n          </div>\n\n          <div class=\"alert alert-custom\" *ngIf=\"githubUsernameForm.controls['githubUsername'].invalid &&\n                (githubUsernameForm.controls['githubUsername'].dirty ||\n                githubUsernameForm.controls['githubUsername'].touched)\">\n\n            <div *ngIf=\"githubUsernameForm.controls['githubUsername'].errors.required\">\n              GitHub username is required.\n            </div>\n\n          </div>\n\n          <div class=\"form-group\">\n            <button class=\"btn btn-custom-yellow btn-md  mt-2\" type=\"submit\" [disabled]=\"githubUsernameForm.pristine ||\n                      githubUsernameForm.invalid\" (click)=\"getGithubUser(githubUsername.value)\">Ignite</button>\n          </div>\n\n        </form>\n      </div>\n\n    </div>\n\n  </div>\n</div>","import { environment } from \"../../environments/environment\";\n\n\nexport const authHeader: string = 'token ' + environment.oauth_token;\n","import { Injectable } from '@angular/core';\nimport { ToastrService } from \"ngx-toastr\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(private toastr: ToastrService) { }\n\n  showSuccess(message, title) {\n    this.toastr.success(message, title)\n  }\n\n  showError(message, title) {\n    this.toastr.error(message, title)\n  }\n\n  showInfo(message, title) {\n    this.toastr.info(message, title)\n  }\n\n  showWarning(message, title) {\n    this.toastr.warning(message, title)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {authHeader} from \"../helpers/auth.headers\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RepositoriesService {\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Accept': 'application/json',\n      'Authorization': authHeader\n    })\n  }\n\n\n  constructor(private http: HttpClient) { }\n\n  getGithubUserInfo(){\n    return localStorage.getItem('githubUserInfo');\n  }\n\n  getUserRepositories(repos_url: string) {\n    return this.http.get(repos_url, this.httpOptions)\n  }\n\n  getUserFollowers(followers_url: string) {\n    return this.http.get(followers_url, this.httpOptions)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport{authHeader} from \"../helpers/auth.headers\";\nimport {configs} from \"../app.config\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  //define endpoint to query\n  private searchUsersEndpoint: string = configs.apiBaseURL + '/search/users';\n\n\n  // define http-options\n  httpOptions = {\n    headers: new HttpHeaders(\n      {\n        'Accept': 'application/json',\n        'Authorization': authHeader\n      }\n    ),\n    params: {\n      'q': ''\n    }\n  }\n\n  constructor(private http: HttpClient) {\n  }\n\n  getGithubUser(username: string) {\n\n    // add query parameter\n    this.httpOptions.params.q = username;\n\n    return this.http.get(this.searchUsersEndpoint, this.httpOptions);\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  oauth_token:'73ac3fb0f8a2775e6d6e5c582d03a84e2356b363',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}