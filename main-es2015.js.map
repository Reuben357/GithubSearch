{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.config.ts","./src/app/app.module.ts","./src/app/components/repositories/repositories.component.ts","./src/app/components/repositories/repositories.component.html","./src/app/components/users/users.component.ts","./src/app/components/users/users.component.html","./src/app/helpers/auth.headers.ts","./src/app/services/notification.service.ts","./src/app/services/repositories.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UsersComponent } from './components/users/users.component';\nimport { RepositoriesComponent } from './components/repositories/repositories.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsersComponent\n  },\n  {\n    path: 'repositories',\n    component: RepositoriesComponent\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { SlimLoadingBarService } from \"ng2-slim-loading-bar\";\nimport {\n  NavigationCancel,\n  NavigationEnd,\n  NavigationError,\n  NavigationStart,\n  Router\n} from \"@angular/router\";\nimport { NotificationService } from \"./services/notification.service\";\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'GithubSearch';\n\n  constructor(private loadingBar: SlimLoadingBarService,\n    private router: Router) {\n\n    // @ts-ignore\n    this.router.events.subscribe((event: Event) => {\n      this.navigationInterceptor(event);\n    });\n  }\n\n  private navigationInterceptor(event: Event): void {\n    if (event instanceof NavigationStart) {\n      this.loadingBar.start();\n    }\n\n    if (event instanceof NavigationEnd) {\n      this.loadingBar.complete();\n    }\n\n    if (event instanceof NavigationCancel) {\n      this.loadingBar.stop();\n    }\n\n    if (event instanceof NavigationError) {\n      this.loadingBar.stop();\n    }\n  }\n}\n","<ng2-slim-loading-bar [color]=\"'#001e1d'\" [height]=\"'10px'\" ></ng2-slim-loading-bar>\n\n<nav class=\"navbar navbar-expand-sm bg-light\">\n  <div class=\"container-fluid\">\n    <ul class=\"navbar-nav\">\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\"\n           routerLink=\"/\"\n           routerLinkActive=\"active\">\n          Home\n        </a>\n      </li>\n    </ul>\n  </div>\n</nav>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","export const configs = {\n    apiBaseURL: 'https://api.github.com'\n  }\n  ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RepositoriesComponent } from './components/repositories/repositories.component';\nimport { UsersComponent } from './components/users/users.component';\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {SlimLoadingBarModule} from \"ng2-slim-loading-bar\";\nimport {ToastrModule} from \"ngx-toastr\";\nimport { UserService } from './services/user.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RepositoriesComponent,\n    UsersComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    SlimLoadingBarModule.forRoot(),\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    AppRoutingModule\n  ],\n  providers: [UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport UserModel from \"../../models/user.model\";\nimport {RepositoriesService} from \"../../services/repositories.service\";\nimport RepositoryModel from \"../../models/repository.model\";\n\n\n@Component({\n  selector: 'app-repositories',\n  templateUrl: './repositories.component.html',\n  styleUrls: ['./repositories.component.css']\n})\nexport class RepositoriesComponent implements OnInit {\n\n\n  githubUserInfo: UserModel;\n  userRepositories: RepositoryModel[];\n  userFollowers: UserModel[];\n  followerCount: number;\n  repositoryCount: number;\n\n  constructor(private repositoriesService: RepositoriesService) { }\n\n  ngOnInit(): void {\n    this.githubUserInfo = JSON.parse(this.repositoriesService.getGithubUserInfo());\n\n    this.repositoriesService.getUserRepositories(this.githubUserInfo.repos_url).subscribe((data: RepositoryModel[])  => {\n      this.userRepositories = data;\n      this.repositoryCount = this.userRepositories.length || 0;\n    });\n\n    this.repositoriesService.getUserFollowers(this.githubUserInfo.followers_url).subscribe((data: UserModel[] )=> {\n      this.userFollowers = data;\n      this.followerCount =this.userFollowers.length || 0;\n    })\n  }\n  \n\n}\n","<div class=\"row\" style=\"padding-top: 68px;  padding-bottom: 50px;\" ng>\n  <div class=\"col-12\">\n    <div class=\"card card-bg\">\n      <div class=\"card-body\">\n        <div class=\"card-title mb-4\">\n          <div class=\"d-flex justify-content-start\">\n            <div class=\"image-container\">\n              <img alt=\"GitHub User's Avatar\" class=\"img-thumbnail\" id=\"img-avatar\" src=\"{{githubUserInfo.avatar_url}}\">\n            </div>\n\n\n            <div class=\"userData ml-3\">\n              <h2 class=\"d-block\" id=\"user-name\">\n                {{githubUserInfo.login}}\n              </h2>\n\n\n              <h6 class=\"d-block\">{{repositoryCount}} repositories</h6>\n\n\n              <h6 class=\"d-block\">{{followerCount}} followers</h6>\n            </div>\n\n          </div>\n        </div>\n\n\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <ul class=\"nav nav-tabs\" id=\"repositoriesTab\" role=\"tablist\">\n\n              <li class=\"nav-item mr-2\">\n                <button aria-controls=\"user-repositories\" aria-selected=\"true\" class=\"nav-link active btn-custom-yellow\"\n                  data-toggle=\"tab\" href=\"#user-repositories\" id=\"user-repositories-tab\"\n                  role=\"tab\">Repositories</button>\n              </li>\n\n\n              <li class=\"nav-item\">\n                <button aria-controls=\"user-followers\" aria-selected=\"false\" class=\"nav-link btn-custom-yellow\"\n                  data-toggle=\"tab\" href=\"#user-followers\" id=\"user-followers-tab\" role=\"tab\">Followers</button>\n              </li>\n\n            </ul>\n\n\n            <div class=\"tab-content ml-1\" id=\"repositories-tab-content\">\n\n              <div aria-labelledby=\"user-repositories-tab\" class=\"tab-pane fade show active\" id=\"user-repositories\"\n                role=\"tabpanel\">\n                <table class=\"table\" id=\"user-repositories-table\">\n                  <tbody>\n                    <tr *ngFor=\"let userRepository of userRepositories\">\n                      <td>\n                        <h4 class=\"font-weight-bold\">{{userRepository.full_name}}</h4>\n                        <div class=\"mt-2 mb-2\">\n                          {{userRepository.description}}\n                        </div>\n                        <a class=\"mb-2\" href=\"{{userRepository.html_url}}\" target=\"_blank\">Access repository</a>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n\n\n              <div aria-labelledby=\"user-followers\" class=\"tab-pane fade\" id=\"user-followers\" role=\"tabpanel\">\n                <table class=\"table\" id=\"use-followers-table\">\n                  <tbody>\n                    <tr *ngFor=\"let userFollower of userFollowers\">\n                      <td>\n                        <div class=\"row\">\n                          <div class=\"col-3\">\n                            <img alt=\"A user's follower avatar\" class=\"img-fluid img-thumbnail\"\n                              src=\"{{userFollower.avatar_url}}\">\n                          </div>\n                          <div class=\"col-4\">\n                            <h4 class=\"font-weight-bold\">{{userFollower.login}}</h4>\n                            <a class=\"mb-2\" href=\"{{userFollower.html_url}}\" target=\"_blank\">Access Follower</a>\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { UserService } from '../../services/user.service'\nimport {Router} from \"@angular/router\";\nimport {NotificationService} from \"../../services/notification.service\";\nimport {SlimLoadingBarService} from \"ng2-slim-loading-bar\";\n\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  githubUsernameForm: FormGroup;\n  private items;\n\n  constructor(private formBuilder: FormBuilder,\n    private notification: NotificationService,\n    private router: Router,\n    private slimLoadingBarService: SlimLoadingBarService,\n    private userService: UserService) {\nthis.createForm()\n}\n\nstartLoading() {\nthis.slimLoadingBarService.start();\n}\n\nstopLoading() {\nthis.slimLoadingBarService.stop();\n}\n\ncreateForm() {\nthis.githubUsernameForm = this.formBuilder.group({\ngithubUsername: ['', Validators.required]\n})\n}\n\ngetGithubUser(username: string) {\nthis.userService.getGithubUser(username).subscribe(data =>{\nthis.items = data['items']\n\n// process results from query\nthis.startLoading()\nif (this.items.length === 1){\n\n// save items to local storage\nlocalStorage.setItem('githubUserInfo', JSON.stringify(this.items[0]));\n\n// redirect to repositories\nthis.router.navigateByUrl('/repositories')\n\n} else {\n// toast error\nthis.notification.showError('Please provide YOUR specific username.', 'Invalid username')\n}\nthis.stopLoading()\n\n});\n\n}\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\" id=\"landingPageSection\">\n\n  <div class=\" col-lg-6 col-md-7 offset-md-3\">\n\n    <span class=\"anchor\"></span>\n\n    <div class=\"card card-outline-secondary card-bg\">\n\n      <div class=\"card-header\">\n        <h4 class=\"mb-0\">Your Github Repositories</h4>\n      </div>\n\n      <div class=\"card-body\">\n\n        <form [formGroup]=\"githubUsernameForm\" novalidate>\n\n          <div class=\"form-group\">\n            <label>Username</label>\n            <input class=\"form-control\" formControlName=\"githubUsername\" type=\"text\" #githubUsername>\n          </div>\n\n          <div class=\"alert alert-custom\" *ngIf=\"githubUsernameForm.controls['githubUsername'].invalid &&\n                (githubUsernameForm.controls['githubUsername'].dirty ||\n                githubUsernameForm.controls['githubUsername'].touched)\">\n\n            <div *ngIf=\"githubUsernameForm.controls['githubUsername'].errors.required\">\n              GitHub username is required.\n            </div>\n\n          </div>\n\n          <div class=\"form-group\">\n            <button class=\"btn btn-custom-yellow btn-md  mt-2\" type=\"submit\" [disabled]=\"githubUsernameForm.pristine ||\n                      githubUsernameForm.invalid\" (click)=\"getGithubUser(githubUsername.value)\">Ignite</button>\n          </div>\n\n        </form>\n      </div>\n\n    </div>\n\n  </div>\n</div>","import { environment } from \"../../environments/environment\";\n\n\nexport const authHeader: string = 'token ' + environment.oauth_token;\n","import { Injectable } from '@angular/core';\nimport { ToastrService } from \"ngx-toastr\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(private toastr: ToastrService) { }\n\n  showSuccess(message, title) {\n    this.toastr.success(message, title)\n  }\n\n  showError(message, title) {\n    this.toastr.error(message, title)\n  }\n\n  showInfo(message, title) {\n    this.toastr.info(message, title)\n  }\n\n  showWarning(message, title) {\n    this.toastr.warning(message, title)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {authHeader} from \"../helpers/auth.headers\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RepositoriesService {\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Accept': 'application/json',\n      'Authorization': authHeader\n    })\n  }\n\n\n  constructor(private http: HttpClient) { }\n\n  getGithubUserInfo(){\n    return localStorage.getItem('githubUserInfo');\n  }\n\n  getUserRepositories(repos_url: string) {\n    return this.http.get(repos_url, this.httpOptions)\n  }\n\n  getUserFollowers(followers_url: string) {\n    return this.http.get(followers_url, this.httpOptions)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport{authHeader} from \"../helpers/auth.headers\";\nimport {configs} from \"../app.config\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  //define endpoint to query\n  private searchUsersEndpoint: string = configs.apiBaseURL + '/search/users';\n\n\n  // define http-options\n  httpOptions = {\n    headers: new HttpHeaders(\n      {\n        'Accept': 'application/json',\n        'Authorization': authHeader\n      }\n    ),\n    params: {\n      'q': ''\n    }\n  }\n\n  constructor(private http: HttpClient) {\n  }\n\n  getGithubUser(username: string) {\n\n    // add query parameter\n    this.httpOptions.params.q = username;\n\n    return this.http.get(this.searchUsersEndpoint, this.httpOptions);\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  oauth_token:'73ac3fb0f8a2775e6d6e5c582d03a84e2356b363',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}